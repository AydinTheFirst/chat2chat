// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  username    String @unique @default(cuid())
  email       String @unique
  displayName String
  password    String

  tokens   Token[]
  roles    UserRole[] @default([USER])
  messages Message[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Token {
  id     String @id @default(uuid())
  token  String @unique @default(cuid())
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@map("tokens")
}

model Channel {
  id            String  @id @default(uuid())
  name          String
  ownerId       String
  lastMessageId String?

  messages Message[]
  users    User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("channels")
}

model Message {
  id        String @id @default(uuid())
  channelId String
  userId    String
  content   String

  channel Channel @relation(fields: [channelId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}

enum UserRole {
  USER
  ADMIN
}
